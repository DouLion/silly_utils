// 测试
#pragma once
#if IS_WIN32
#include <vld.h>
#endif

#define CATCH2_UNIT_TEST 1
#ifdef CATCH2_UNIT_TEST
#include "units/test_demo.hpp"
#include "units/test_cairo.hpp"
#include "units/test_compress.hpp"
#include "units/test_convert.hpp"
#include "units/test_database.hpp"

#include "units/test_encode.hpp"
#include "units/test_file.hpp"
#include "units/test_geo.hpp"
#include "units/test_ini.hpp"
// 有内存泄漏
//#include "units/test_jpeg.hpp"
#include "units/test_log.hpp"
#include "units/test_matrix.hpp"
#include "units/test_proj.hpp"
#include "units/test_pyramid.hpp"
#include "units/test_system.hpp"
#include "units/test_tcp.hpp"
#include "units/test_triangular.hpp"
#include "units/test_weather.hpp"
#include <catch2/catch_session.hpp>
#endif

void catch2_test()
{
#ifdef CATCH2_UNIT_TEST
    std::vector<std::string> args{/*"-?", "-n",*/ "-d=yes", "-v=high"};
    int argc = args.size() + 1;
    char** argv = new char*[argc];
    argv[0] = "test";
    for (int i = 0; i < args.size(); ++i)
    {
        argv[i + 1] = (char*)args[i].c_str();
    }
    Catch::Session().run(argc, argv);
    delete[] argv;
#endif
}

int main(int argc, char** argv)
{
    SLOG_INFO("开始运行")
    /// Catch::Session().
    // Catch::Session().
    catch2_test();

    return 0;
}

