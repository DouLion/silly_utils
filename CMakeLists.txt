cmake_minimum_required(VERSION 3.15)
project(silly_utils)

# 判断当前目录是否为 cmake的根目录,如果不是,则是被其他项目引用的,不需要编译测试,工具模块
message(STATUS "su 当前文件根目录 (CMAKE_CURRENT_SOURCE_DIR) ${CMAKE_CURRENT_SOURCE_DIR}")
message(STATUS "su 当前项目根目录 (CMAKE_SOURCE_DIR) ${CMAKE_SOURCE_DIR}")

# 当前文件路径
set(SU_FILE_ROOT "${CMAKE_CURRENT_SOURCE_DIR}")
# 项目根CMakeLists.txt文件路径
set(SU_PROJ_ROOT "${CMAKE_SOURCE_DIR}")
set(CMAKE_MODULE_PATH "${SU_FILE_ROOT}/cmake;${CMAKE_MODULE_PATH}")
if("${SU_FILE_ROOT}" STREQUAL "${SU_PROJ_ROOT}")
	set(BUILD_AS_PROJ TRUE)
	message(STATUS "作为单个工程编译")
	include(${SU_PROJ_ROOT}/cmake/ThirdSupport.cmake)
else ()
	set(BUILD_AS_LIB TRUE)
	message(STATUS "作为嵌入库编译")
endif()

include(${SU_FILE_ROOT}/cmake/CheckEnv.cmake)
include(${SU_FILE_ROOT}/cmake/CheckOSEndian.cmake)
include(${SU_FILE_ROOT}/cmake/CheckDM8.cmake)
include(${SU_FILE_ROOT}/cmake/CheckEccodes.cmake)
include(${SU_FILE_ROOT}/cmake/CheckCUDA.cmake)
if(BUILD_AS_PROJ)
	include_directories(${SU_PROJ_ROOT}/su)
	add_definitions("-DDEFAULT_SU_ROOT_DIR=\"${SU_PROJ_ROOT}\"")
    add_definitions("-DDEFAULT_SU_DATA_DIR=\"${SU_PROJ_ROOT}/data\"")
	add_subdirectory(su)
	add_subdirectory(test)
	add_subdirectory(test_2)
	if(NOT DISABLE_TOOLS)
		add_subdirectory(tools)
		add_subdirectory(extend)
	endif()
else()

	include_directories(${SU_FILE_ROOT}/su)
	add_subdirectory(su)
endif()